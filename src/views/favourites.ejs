<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/favourites.css">
    <title>Favourites & Blacklist | Lord of the Rings</title>
</head>
<body>
    <main>
        <div class="emptyspan">

        </div>

        <%- include('partials/header.ejs') %>


        <div class="hero">

            <div class="linearmain">
                <div class="linear"></div>
                    <h2 class="lineartitle">Favourites</h2>
                <div class="linear"></div>
            </div>

            <div class="favourites" id="favourites">
                <% for (const favorite of favorites) { %>
                <div class="favouriteList">
                  <div class="favouriteQuote">
                    <h2 class="dialog"><%= favorite.dialog %></h2>
                    <a href="https://lotr.fandom.com/wiki/<%= favorite.character %>" target="_blank"><h2 class="author"><%= favorite.character %></h2></a>
                    <h2 class="invisible" id="<%= favorite._id %>"><%= favorite._id %></h2>
                  </div>
                  <button class="btn" onclick="fetchQuotes('<%= favorite.characterId %>')">Fetch Quotes</button>
                  <button class="btn" onclick="deleteFavourite('<%= favorite._id %>')">Clear</button>
                </div>
                <% } %>
              </div>
              
              <div class="linearmain">
                <div class="linear"></div>
                <h2 class="lineartitle">Blacklisted</h2>
                <div class="linear"></div>
              </div>
              
              <div class="blacklist" id="blacklist">
                <% for (const blacklist of blacklisted) { %>
                  <div class="favouriteList">
                    <div class="favouriteQuote">
                      <h2 class="dialog"><%= blacklist.dialog %></h2>
                      <h2 class="reason"><span style="color: rgb(177, 174, 160)">Reason:</span> <%= blacklist.reason %></h2>
                      <h2 class="invisible" id="<%= blacklist._id %>"><%= blacklist._id %></h2>
                    </div>
                    <button class="btn" onclick="deleteBlacklist('<%= blacklist._id %>')">Clear</button>
                  </div>
                <% } %>
              </div>
              
              <a href="/home"><button class="btn2">‚Üê Back</button></a>
              <div class="emptyspan"></div>
              </div>

              <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
              <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
              
              <script>

                // Fetch other quotes 

                
                function createQuotesPopup(quotesContent) {
                        const popupContainer = document.createElement('div');
                        popupContainer.classList.add('popup-container');

                        const popupContent = document.createElement('div');
                        popupContent.classList.add('popup-content');
                        popupContent.innerHTML = quotesContent;

                        const closeButton = document.createElement('span');
                        closeButton.classList.add('popup-close');
                        closeButton.innerHTML = 'x';
                        closeButton.addEventListener('click', () => {
                          document.body.removeChild(popupContainer);
                        });

                        popupContainer.appendChild(closeButton);
                        popupContainer.appendChild(popupContent);
                        document.body.appendChild(popupContainer);
                      }
                
                async function fetchQuotes(characterId) {
                    const quoteEndpoint = `https://the-one-api.dev/v2/character/${characterId}/quote`;
                    const bearerToken = 'OeUeZhk8zm3i_1f4FjF9'; 
                    const headers = {
                      'Authorization': `Bearer ${bearerToken}`
                    };

                    try {
                        const response = await fetch(quoteEndpoint, { headers });
                        const quotesData = await response.json();

                        // Display the fetched quotes in a popup
                        if (quotesData.docs.length > 0) {
                          let quotesContent = '';
                          for (const quote of quotesData.docs) {
                            quotesContent += `<p>${quote.dialog}</p>`;
                          }
                          createQuotesPopup(quotesContent);
                        } else {
                          console.log('No other quotes found for the character.');
                        }
                      } catch (error) {
                        console.log('Error fetching quotes:', error);
                      }
                    }

                // Delete elements

                const deletedFavourites = [];
                const deletedBlacklist = [];
              
                const deleteFavourite = (favoriteId) => {
                  const favouriteElement = document.getElementById(favoriteId);
                  favouriteElement.parentNode.parentNode.remove();
                  console.log(favoriteId, "LOOK");
                  console.log(favouriteElement.id);
                  console.log('Deleting from favourites...', favoriteId);
              
                  deletedFavourites.push(favoriteId); 
              
                  axios.post('/deleteFavourite', { favoriteIds: deletedFavourites })
                    .then(response => {
                      console.log('Deleted from favourites');
                    })
                    .catch(error => {
                      console.error('Error:', error);
                    });
                };

                const deleteBlacklist = (blacklistId) => {
                    const blacklistElement = document.getElementById(blacklistId);
                    blacklistElement.parentNode.parentNode.remove();
                    console.log('Deleting from blacklist...', blacklistId);

                    deletedBlacklist.push(blacklistId); 

                    axios.post('/deleteBlacklist', { blacklistId })
                      .then(response => {
                        console.log('Deleted from blacklist');
                      })
                      .catch(error => {
                        console.error('Error:', error);
                      });
                  };
              </script>
                 
    </main>
    <%- include('partials/footer.ejs') %>
</body>
</html>